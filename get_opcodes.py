import solcx
import os

def find_solidity_version(Lines):
   for line in Lines:
      splitted = line.split(" ")
      if "pragma" in splitted :
         return splitted[2]

success = 0
failed = 0

contracts = []

for filename in os.listdir("contracts"):
    with open(os.path.join("contracts", filename), 'r') as f:
        Lines = f.readlines()
        try :
            sv = find_solidity_version(Lines)
            if sv == None :
                failed += 1
                continue
            sv = sv.strip()
            try:
                stop = sv.index(";")
                solcx.set_solc_version(sv[1:stop])
                out = solcx.compile_files(os.path.join("contracts", filename), output_values=["opcodes"],solc_version=sv[1:stop])
                for k,v in out.items():
                    contracts.append(v["opcodes"])
                print(f"SV is compiled with {sv}, {sv[1:stop]} and filename: {filename}")
                success += 1
                
            except:
                print(f"{filename} is failed in inner with {sv} {sv[1:stop]}")
                failed += 1
        except:
            print(f"{filename} is failed in outer")
            failed += 1
            continue
print(failed)
print(success)
f = open("demofile2.txt", "w")
for code in contracts:
    if(len(code)> 5):
        f.write(code.replace("\n"," "))
        f.write("\n")
        f.write("\n")
f.close()


      